@model Course.WEB.Models.MyViewModel.TopicViewModel
@using Course.WEB.Helpers
@{
    ViewBag.Title = Model.Topic.Name;
}
<style type="text/css">
    A {
        color: #428bca;
    }

        A:visited {
            color: #428bca;
        }
</style>
<h2>@Model.Topic.Name</h2>
<div style="margin: 25px 100px 25px 10px;">
    <div style="margin: 10px;">@Model.Topic.Description</div>
    <div style="margin: 5px 10px;">
        <strong>Дисциплина - </strong>
        <a href="@Url.Action("Get", "Discipline", new { disciplineId = Model.Topic.Course.Discipline.Id }, null)">@Model.Topic.Course.Discipline.Name</a>
    </div>
    <div style="margin: 5px 10px;"><strong>Курс - </strong>
        <a href="@Url.Action("Get", "Course", new { courseId = Model.Topic.Course.Id }, null)">@Model.Topic.Course.Name</a>
    </div>
    <div style="margin: 5px 10px;"><strong>Найдено задач: </strong>@Model.Topic.Tasks.Count()</div>
    @if (Model.TopicStatistic != null)
    {
        <div style="margin: 5px 10px;"><strong>Максимально возможный балл: </strong>@Model.TopicStatistic.HighestPossibleScore</div>
        <div style="margin: 5px 10px;"><strong>Максимальный полученный балл: </strong>@Model.TopicStatistic.HighestScore</div>
        <div style="margin: 5px 10px;"><strong>Средний балл: </strong>@Model.TopicStatistic.OverallAcademicPerformance</div>
        if (User.HasPermissionToRedact(Model.Topic.CreatorId))
        {
            <div style="margin: 5px 10px;">
                <a href="@Url.Action("Topic", "Statistic", new { topicId = Model.Topic.Id }, null)">Посмотреть подробную статистику</a>
            </div>
        }
    }
</div>
@if (Model.Topic.Tasks.Count() == 0)
{
    <h3 style="margin: 10px; margin-bottom: 15px;">В этой теме ещё нет ни одной задачи</h3>
}
else
{
<div>
    @for (int i = 0; i < Model.Topic.Tasks.Count(); i++)
    {
        <div style ="background: #f7f3ef; margin: 10px; padding: 10px; margin-right: 100px">
            <div>
                <h4><a href="@Url.Action("Solve", "Task", new { taskId = Model.Topic.Tasks.ToList()[i].Id }, null)">
                    @(i + 1). @Model.Topic.Tasks.ToList()[i].Name</a>
                @if (User.HasPermissionToRedact(Model.Topic.Tasks.ToList()[i].CreatorId))
                {
                    using (Html.BeginForm("Edit", "Task", FormMethod.Get, new
                    {
                        style = "display: inline-block; margin-right: 5px;"
                    }))
                    {
                        @Html.Hidden("taskId", Model.Topic.Tasks.ToList()[i].Id)
                        <button type="submit" class="btn btn-default btn-mine"
                                style="padding: 0px 7px;">
                            <span class="glyphicon glyphicon-pencil" aria-hidden="true" 
                                  style="font-size: 20px;"></span>
                        </button>
                    }
                    using (Html.BeginForm("Delete", "Task", new { taskId = Model.Topic.Tasks.ToList()[i].Id }, FormMethod.Post, new
                    {
                        style = "display: inline-block;right: 215px; position: absolute; margin-top: -10px; "
                    }))
                    {
                        <button type="submit" class="btn btn-default btn-mine"
                                style="padding: 0px 7px;">
                            <span class="glyphicon glyphicon-remove" aria-hidden="true"
                                  style="font-size: 20px;"></span>
                        </button>
                    }
                }</h4>
            </div>
            <div>
                @Model.Topic.Tasks.ToList()[i].Condition
            </div>
            <div>
                Вес задачи: @Model.Topic.Tasks.ToList()[i].Weight
            </div>
            @if (Model.TasksStatistic.FirstOrDefault(x => x.TaskId == Model.Topic.Tasks.ToList()[i].Id) != null)
            {
                <div>
                    Средняя сложность: @Model.TasksStatistic.FirstOrDefault(x => x.TaskId == Model.Topic.Tasks.ToList()[i].Id).Complexity
                </div>
                <div>
                    Среднее время решения: @Model.TasksStatistic.FirstOrDefault(x => x.TaskId == Model.Topic.Tasks.ToList()[i].Id).AverageTime секунд
                </div>
            }
            @if (Model.Topic.Tasks.ToList()[i].Creator != null)
            {
                <span>Автор: </span> 
                @Html.ActionLink(Model.Topic.Tasks.ToList()[i].Creator.LastName + " " + Model.Topic.Tasks.ToList()[i].Creator.FirstName,
                "Index", "Manage", new { user_id = Model.Topic.Tasks.ToList()[i].Creator.Id }, null)
            }
         </div>
    }
</div>
}
@if (User.HasPermissionToCreate())
{
using (Html.BeginForm("Create", "Task", FormMethod.Get, new
{
    style = "display: inline-block; margin-left: 10px;"
}))
{
    @Html.Hidden("topicId", Model.Topic.Id)
    <button type="submit" class="btn btn-default btn-mine"
            style="">
        <span class="glyphicon glyphicon-plus" aria-hidden="true"
              style="font-size: 20px;"></span> Добавить задачу в тему
    </button>
}
}